    /*
     * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
     * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
     */
    package com.mycompany.nunezbinarycalculator;

    /**
     *
     * @author kitty
     */

    import java.awt.Color;
    import javax.swing.BorderFactory;
    public class BinaryCalculator extends javax.swing.JFrame {
        public BinaryCalculator() {
                            initComponents();
                            customizeUI();
                    }

                    private void customizeUI() {
                            addButtonPressEffect(btnFlipX);
                            addButtonPressEffect(btnFlipY);
                            addButtonPressEffect(btnAnd);
                            addButtonPressEffect(btnOr);
                            addButtonPressEffect(btnXor);
                            addButtonPressEffect(btnEquals);
                            addButtonPressEffect(btnImpl);
            }
                    private void addButtonPressEffect(javax.swing.JButton button) {
                            button.addMouseListener(new java.awt.event.MouseAdapter() {
                                    public void mousePressed(java.awt.event.MouseEvent evt) {
                                            button.setBackground(Color.LIGHT_GRAY); // Darken when pressed
                                    }

                                    public void mouseReleased(java.awt.event.MouseEvent evt) {
                                            button.setBackground(Color.WHITE); // Return to white after click
                                    }
                            });

                            button.setBackground(Color.WHITE); // Set initial white color
                            button.setOpaque(true);
                            button.setBorder(BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            button.setFocusPainted(false);
                            button.setContentAreaFilled(true);
                    }
                    /**
                     * This method is called from within the constructor to initialize the form.
                     * WARNING: Do NOT modify this code. The content of this method is always
                     * regenerated by the Form Editor.
                     */
                    @SuppressWarnings("unchecked")
                    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
                    private void initComponents() {

                            x_label = new javax.swing.JLabel();
                            x_result = new javax.swing.JTextField();
                            btnFlipX = new javax.swing.JButton();
                            y_label = new javax.swing.JLabel();
                            y_result = new javax.swing.JTextField();
                            btnFlipY = new javax.swing.JButton();
                            btnAnd = new javax.swing.JButton();
                            btnOr = new javax.swing.JButton();
                            btnImpl = new javax.swing.JButton();
                            btnXor = new javax.swing.JButton();
                            btnEquals = new javax.swing.JButton();
                            operations_label = new javax.swing.JLabel();
                            overall_result = new javax.swing.JTextField();
                            result_label = new javax.swing.JLabel();
                            title = new javax.swing.JLabel();

                            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

                            x_label.setText("X:");

                            x_result.setEditable(false);
                            x_result.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                            x_result.setText("TRUE");
                            x_result.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
                            x_result.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            x_resultActionPerformed(evt);
                                    }
                            });

                            btnFlipX.setText("Flip X");
                            btnFlipX.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            btnFlipX.setFocusPainted(false);
                            btnFlipX.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            btnFlipXActionPerformed(evt);
                                    }
                            });

                            y_label.setText("Y:");

                            y_result.setEditable(false);
                            y_result.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                            y_result.setText("TRUE");
                            y_result.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
                            y_result.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            y_resultActionPerformed(evt);
                                    }
                            });

                            btnFlipY.setText("Flip Y");
                            btnFlipY.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            btnFlipY.setFocusPainted(false);
                            btnFlipY.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            btnFlipYActionPerformed(evt);
                                    }
                            });

                            btnAnd.setText("AND");
                            btnAnd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            btnAnd.setFocusPainted(false);
                            btnAnd.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            btnAndActionPerformed(evt);
                                    }
                            });

                            btnOr.setText("OR");
                            btnOr.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            btnOr.setFocusPainted(false);
                            btnOr.setOpaque(true);
                            btnOr.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            btnOrActionPerformed(evt);
                                    }
                            });

                            btnImpl.setText("IMPL");
                            btnImpl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            btnImpl.setFocusPainted(false);
                            btnImpl.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            btnImplActionPerformed(evt);
                                    }
                            });

                            btnXor.setText("XOR");
                            btnXor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            btnXor.setFocusPainted(false);
                            btnXor.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            btnXorActionPerformed(evt);
                                    }
                            });

                            btnEquals.setText("EQUALS");
                            btnEquals.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            btnEquals.setFocusPainted(false);
                            btnEquals.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            btnEqualsActionPerformed(evt);
                                    }
                            });

                            operations_label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
                            operations_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                            operations_label.setText("OPERATIONS:");
                            operations_label.setToolTipText("");

                            overall_result.setEditable(false);
                            overall_result.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
                            overall_result.setHorizontalAlignment(javax.swing.JTextField.CENTER);
                            overall_result.setText("TRUE");
                            overall_result.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
                            overall_result.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                            overall_resultActionPerformed(evt);
                                    }
                            });

                            result_label.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                            result_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                            result_label.setText("RESULT:");
                            result_label.setToolTipText("");

                            title.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
                            title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                            title.setText("BINARY CALCULATOR");
                            title.setToolTipText("");

                            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                            getContentPane().setLayout(layout);
                            layout.setHorizontalGroup(
                                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(48, 48, 48)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addComponent(result_label)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(overall_result))
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                            .addComponent(x_label)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(x_result, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addGroup(layout.createSequentialGroup()
                                                                            .addComponent(y_label)
                                                                            .addGap(18, 18, 18)
                                                                            .addComponent(y_result)))
                                                            .addGap(7, 7, 7)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                    .addComponent(btnFlipX, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                                                    .addComponent(btnFlipY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnEquals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnXor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnAnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnOr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnImpl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(operations_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(36, 36, 36))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(title)
                                            .addGap(82, 82, 82))
                            );
                            layout.setVerticalGroup(
                                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                            .addGap(29, 29, 29)
                                            .addComponent(title)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                            .addComponent(operations_label)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                    .addComponent(x_label)
                                                                    .addComponent(x_result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(btnFlipX))
                                                            .addGap(18, 18, 18)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                    .addComponent(y_label)
                                                                    .addComponent(y_result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addComponent(btnFlipY)))
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addComponent(btnAnd)
                                                            .addGap(9, 9, 9)
                                                            .addComponent(btnOr)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(btnXor)))
                                            .addGap(9, 9, 9)
                                            .addComponent(btnEquals)
                                            .addGap(2, 2, 2)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(overall_result, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(result_label)
                                                    .addComponent(btnImpl))
                                            .addGap(50, 50, 50))
                            );

                            pack();
                    }// </editor-fold>//GEN-END:initComponents

                    private void btnImplActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImplActionPerformed
                            // TODO add your handling code here:
                            System.out.println("Performing IMPL Operation....");
                            Boolean x = Boolean.parseBoolean(x_result.getText());
                            Boolean y = Boolean.parseBoolean(y_result.getText());
                            Boolean result = !x || y;
                            overall_result.setText(result.toString().toUpperCase());
                            System.out.println("Result: " + result.toString().toUpperCase());
                    }//GEN-LAST:event_btnImplActionPerformed

                    private void btnXorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXorActionPerformed
                            // TODO add your handling code here:
                            System.out.println("Performing XOR Operation....");
                            Boolean x = Boolean.parseBoolean(x_result.getText());
                            Boolean y = Boolean.parseBoolean(y_result.getText());
                            Boolean result = x ^ y;
                            overall_result.setText(result.toString().toUpperCase());
                            System.out.println("Result: " + result.toString().toUpperCase());
                    }//GEN-LAST:event_btnXorActionPerformed

                    private void btnAndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAndActionPerformed
                            // TODO add your handling code here:
                            System.out.println("Performing AND Operation....");
                            Boolean x = Boolean.parseBoolean(x_result.getText());
                            Boolean y = Boolean.parseBoolean(y_result.getText());
                            Boolean result = x && y;
                            overall_result.setText(result.toString().toUpperCase());
                            System.out.println("Result: " + result.toString().toUpperCase());
                    }//GEN-LAST:event_btnAndActionPerformed

                    private void overall_resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overall_resultActionPerformed
                            // TODO add your handling code here:
                    }//GEN-LAST:event_overall_resultActionPerformed

                    private void x_resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x_resultActionPerformed
                            // TODO add your handling code here:

                    }//GEN-LAST:event_x_resultActionPerformed

                    private void btnFlipXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlipXActionPerformed
                            // TODO add your handling code here:

                            Boolean val = Boolean.parseBoolean(x_result.getText());
                            System.out.println("Reverting X from " + val.toString().toUpperCase() + " to " + String.valueOf(!val).toUpperCase());
                            val = !val;
                            x_result.setText(val.toString().toUpperCase());
                    }//GEN-LAST:event_btnFlipXActionPerformed

                    private void btnFlipYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlipYActionPerformed
                            // TODO add your handling code here:
                            Boolean val = Boolean.parseBoolean(y_result.getText());
                            System.out.println("Reverting Y from " + val.toString().toUpperCase() + " to " + String.valueOf(!val).toUpperCase());
                            val = !val;
                            y_result.setText(val.toString().toUpperCase());
                    }//GEN-LAST:event_btnFlipYActionPerformed

                    private void y_resultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y_resultActionPerformed
                            // TODO add your handling code here:

                    }//GEN-LAST:event_y_resultActionPerformed

                    private void btnOrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrActionPerformed
                            // TODO add your handling code here:
                            System.out.println("Performing OR Operation....");
                            Boolean x = Boolean.parseBoolean(x_result.getText());
                            Boolean y = Boolean.parseBoolean(y_result.getText());
                            Boolean result = x || y;
                            overall_result.setText(result.toString().toUpperCase());
                            System.out.println("Result: " + result.toString().toUpperCase());
                    }//GEN-LAST:event_btnOrActionPerformed

                    private void btnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualsActionPerformed
                            // TODO add your handling code here:
                            System.out.println("Performing EQUALS Operation....");
                            Boolean x = Boolean.parseBoolean(x_result.getText());
                            Boolean y = Boolean.parseBoolean(y_result.getText());
                            Boolean result = x == y;
                            overall_result.setText(result.toString().toUpperCase());
                            System.out.println("Result: " + result.toString().toUpperCase());
                    }//GEN-LAST:event_btnEqualsActionPerformed

                    /**
                     * @param args the command line arguments
                     */
                    public static void main(String args[]) {
                            /* Set the Nimbus look and feel */
                            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
                            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
                             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
                             */
                            try {
                                    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                                            if ("Nimbus".equals(info.getName())) {
                                                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                                    break;
                                            }
                                    }
                            } catch (ClassNotFoundException ex) {
                                    java.util.logging.Logger.getLogger(BinaryCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (InstantiationException ex) {
                                    java.util.logging.Logger.getLogger(BinaryCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (IllegalAccessException ex) {
                                    java.util.logging.Logger.getLogger(BinaryCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                                    java.util.logging.Logger.getLogger(BinaryCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                            }
                            //</editor-fold>

                            /* Create and display the form */
                            java.awt.EventQueue.invokeLater(new Runnable() {
                                    public void run() {
                                            new BinaryCalculator().setVisible(true);
                                    }
                            });
                    }

                    // Variables declaration - do not modify//GEN-BEGIN:variables
                    private javax.swing.JButton btnAnd;
                    private javax.swing.JButton btnEquals;
                    private javax.swing.JButton btnFlipX;
                    private javax.swing.JButton btnFlipY;
                    private javax.swing.JButton btnImpl;
                    private javax.swing.JButton btnOr;
                    private javax.swing.JButton btnXor;
                    private javax.swing.JLabel operations_label;
                    private javax.swing.JTextField overall_result;
                    private javax.swing.JLabel result_label;
                    private javax.swing.JLabel title;
                    private javax.swing.JLabel x_label;
                    private javax.swing.JTextField x_result;
                    private javax.swing.JLabel y_label;
                    private javax.swing.JTextField y_result;
                    // End of variables declaration//GEN-END:variables
            }
